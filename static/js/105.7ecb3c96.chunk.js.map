{"version":3,"file":"static/js/105.7ecb3c96.chunk.js","mappings":"2QAKqBA,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GACX,OADWA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KACnBC,MAAQ,CACNC,SAAU,GACVC,OAAQ,MACRC,UAAW,KAHL,EAgDP,OAhDO,yCAMR,cAcC,gCAED,cAAuB,0BAEvB,SAAaC,GACXC,QAAQC,IAAI,UACZ,IAAMC,GAAQ,UAAQC,KAAKR,OAC3BO,EAASJ,WAAaC,EAAMK,OAAOC,MAAMC,OACzCH,KAAKI,UAAS,kBAAML,OACrB,oBAED,WAEE,OACE,UAAC,EAAAM,SAAD,YACE,8CACA,qBACEC,KAAK,GACLC,GAAG,GACHC,KAAK,KACLC,KAAK,KACLd,UAAWK,KAAKR,MAAMG,UACtBe,SAAUV,KAAKW,aAAaC,KAAKZ,SAEnC,uBAAIA,KAAKR,MAAMG,aACf,mBAAQkB,QAAS,kBAAMhB,QAAQC,IAAI,UAAnC,yBAGL,EAjDkBP,CAAauB,EAAAA,Y,2CCetBC,EAAAA,EAAAA,IAXW,CACrBC,OAAQ,GACRC,WAAY,GACZC,YAAa,GACbC,UAAW,GACXC,cAAe,GACfC,kBAAmB,GACnBC,MAAO,M,mECdT,SAASC,EAAQC,EAAQC,GACvB,IAAIC,EAAOC,OAAOD,KAAKF,GAEvB,GAAIG,OAAOC,sBAAuB,CAChC,IAAIC,EAAUF,OAAOC,sBAAsBJ,GAC3CC,IAAmBI,EAAUA,EAAQC,QAAO,SAAUC,GACpD,OAAOJ,OAAOK,yBAAyBR,EAAQO,GAAKE,eACjDP,EAAKQ,KAAKC,MAAMT,EAAMG,GAG7B,OAAOH,EAGM,SAASU,EAAenC,GACrC,IAAK,IAAIoC,EAAI,EAAGA,EAAIC,UAAUnC,OAAQkC,IAAK,CACzC,IAAIE,EAAS,MAAQD,UAAUD,GAAKC,UAAUD,GAAK,GACnDA,EAAI,EAAId,EAAQI,OAAOY,IAAS,GAAIC,SAAQ,SAAUC,IACpD,OAAexC,EAAQwC,EAAKF,EAAOE,OAChCd,OAAOe,0BAA4Bf,OAAOgB,iBAAiB1C,EAAQ0B,OAAOe,0BAA0BH,IAAWhB,EAAQI,OAAOY,IAASC,SAAQ,SAAUC,GAC5Jd,OAAOiB,eAAe3C,EAAQwC,EAAKd,OAAOK,yBAAyBO,EAAQE,OAI/E,OAAOxC","sources":["chat/Chat.js","services/firebase.js","../javascript/esm|/home/kevkidev/coding/projects/front-react-portfolio/front-react-portfolio-sc/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import { onValue, ref, set } from \"firebase/database\";\r\nimport { Component, Fragment } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport database from \"../services/firebase\";\r\n\r\nexport default class Chat extends Component {\r\n  state = {\r\n    messages: {},\r\n    pseudo: \"kev\",\r\n    maxLength: 150,\r\n  };\r\n\r\n  componentDidMount() {\r\n    // add to db\r\n    // set(ref(database, \"messages/\" + 44), {\r\n    //   username: \"kevv\",\r\n    //   email: \"erzere@idjofjsdof\",\r\n    // });\r\n    // get from db\r\n    // const starCountRef = ref(database, \"user/\" + 44);\r\n    // onValue(starCountRef, (snapshot) => {\r\n    //   const data = snapshot.val();\r\n    //   console.log(data);\r\n    // });\r\n    // update from db\r\n    // delete from db\r\n  }\r\n\r\n  componentDidUpdate() {}\r\n\r\n  handleChange(event) {\r\n    console.log(\"jejdjd\");\r\n    const newState = { ...this.state };\r\n    newState.maxLength -= event.target.value.length;\r\n    this.setState(() => newState);\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    return (\r\n      <Fragment>\r\n        <h1>Welcome to chat!</h1>\r\n        <textarea\r\n          name=\"\"\r\n          id=\"\"\r\n          cols=\"30\"\r\n          rows=\"10\"\r\n          maxLength={this.state.maxLength}\r\n          onChange={this.handleChange.bind(this)}\r\n        ></textarea>\r\n        <p>{this.state.maxLength}</p>\r\n        <button onClick={() => console.log(\"click\")}>Send</button>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","// connecting to google firebase realtime database\n\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase } from \"firebase/database\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"\",\n  authDomain: \"\",\n  databaseURL: \"\",\n  projectId: \"\",\n  storageBucket: \"\",\n  messagingSenderId: \"\",\n  appId: \"\",\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// const database = Rebase.createClass(firebase.databaseURL);\nconst database = null; //getDatabase(app);\n// export const auth = app.auth();\n\n// const provider = new auth.GoogleAuthProvider();\n// provider.setCustomParameters({ prompt: \"select_account\" });\n\n// export const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport { firebaseConfig };\nexport default database;\n","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["Chat","state","messages","pseudo","maxLength","event","console","log","newState","this","target","value","length","setState","Fragment","name","id","cols","rows","onChange","handleChange","bind","onClick","Component","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","i","arguments","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty"],"sourceRoot":""}