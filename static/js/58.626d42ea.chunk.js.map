{"version":3,"file":"static/js/58.626d42ea.chunk.js","mappings":"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","sources":["../node_modules/dompurify/src/utils.js","../node_modules/dompurify/src/tags.js","../node_modules/dompurify/src/attrs.js","../node_modules/dompurify/src/regexp.js","../node_modules/dompurify/src/purify.js","../javascript/esm|/mnt/c/develop/front-react-portfolio/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../javascript/esm|/mnt/c/develop/front-react-portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../javascript/esm|/mnt/c/develop/front-react-portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js","../javascript/esm|/mnt/c/develop/front-react-portfolio/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../javascript/esm|/mnt/c/develop/front-react-portfolio/node_modules/@babel/runtime/helpers/esm/typeof.js","../javascript/esm|/mnt/c/develop/front-react-portfolio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../javascript/esm|/mnt/c/develop/front-react-portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js","../javascript/esm|/mnt/c/develop/front-react-portfolio/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../javascript/esm|/mnt/c/develop/front-react-portfolio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../javascript/esm|/mnt/c/develop/front-react-portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js","../javascript/esm|/mnt/c/develop/front-react-portfolio/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../javascript/esm|/mnt/c/develop/front-react-portfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../javascript/esm|/mnt/c/develop/front-react-portfolio/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/marked/lib/marked.esm.js"],"sourcesContent":["const {\n  hasOwnProperty,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\nexport function unapply(func) {\n  return (thisArg, ...args) => apply(func, thisArg, args);\n}\n\nexport function unconstruct(func) {\n  return (...args) => construct(func, args);\n}\n\n/* Add properties to a lookup table */\nexport function addToSet(set, array) {\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = stringToLowerCase(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/* Shallow clone an object */\nexport function clone(object) {\n  const newObject = create(null);\n\n  let property;\n  for (property in object) {\n    if (apply(hasOwnProperty, object, [property])) {\n      newObject[property] = object[property];\n    }\n  }\n\n  return newObject;\n}\n\n/* IE10 doesn't support __lookupGetter__ so lets'\n * simulate it. It also automatically checks\n * if the prop is function or getter and behaves\n * accordingly. */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  // Object\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  hasOwnProperty,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n};\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n]);\n\n// SVG\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n]);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n]);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'fedropshadow',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n]);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n]);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n]);\n\nexport const text = freeze(['#text']);\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'nonce',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'xmlns',\n  'slot',\n]);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'targetx',\n  'targety',\n  'transform',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n]);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n]);\n","import { seal } from './utils.js';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\s\\S]*|[\\s\\S]*%>/gm);\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\n","import * as TAGS from './tags.js';\nimport * as ATTRS from './attrs.js';\nimport * as EXPRESSIONS from './regexp.js';\nimport {\n  addToSet,\n  clone,\n  freeze,\n  arrayForEach,\n  arrayPop,\n  arrayPush,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n} from './utils.js';\n\nconst getGlobal = () => (typeof window === 'undefined' ? null : window);\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\nconst _createTrustedTypesPolicy = function (trustedTypes, document) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (\n    document.currentScript &&\n    document.currentScript.hasAttribute(ATTR_NAME)\n  ) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nfunction createDOMPurify(window = getGlobal()) {\n  const DOMPurify = (root) => createDOMPurify(root);\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = VERSION;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  const originalDocument = window.document;\n\n  let { document } = window;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  const trustedTypesPolicy = _createTrustedTypesPolicy(\n    trustedTypes,\n    originalDocument\n  );\n  const emptyHTML =\n    trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML('')\n      : '';\n\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName,\n  } = document;\n  const { importNode } = originalDocument;\n\n  let documentMode = {};\n  try {\n    documentMode = clone(document).documentMode ? document.documentMode : {};\n  } catch (_) {}\n\n  let hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    typeof getParentNode === 'function' &&\n    implementation &&\n    typeof implementation.createHTMLDocument !== 'undefined' &&\n    documentMode !== 9;\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  const CUSTOM_ELEMENT_HANDLING = Object.seal(\n    Object.create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false,\n      },\n    })\n  );\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks? */\n  let SANITIZE_DOM = true;\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'role',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function (testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS =\n      'ALLOWED_TAGS' in cfg\n        ? addToSet({}, cfg.ALLOWED_TAGS)\n        : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR =\n      'ALLOWED_ATTR' in cfg\n        ? addToSet({}, cfg.ALLOWED_ATTR)\n        : DEFAULT_ALLOWED_ATTR;\n    URI_SAFE_ATTRIBUTES =\n      'ADD_URI_SAFE_ATTR' in cfg\n        ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR)\n        : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS =\n      'ADD_DATA_URI_TAGS' in cfg\n        ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS)\n        : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS =\n      'FORBID_CONTENTS' in cfg\n        ? addToSet({}, cfg.FORBID_CONTENTS)\n        : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};\n    FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements ===\n        'boolean'\n    ) {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements =\n        cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1\n        ? (PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE)\n        : (PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE);\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc =\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml'\n        ? (x) => x\n        : stringToLowerCase;\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [...TAGS.text]);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  const HTML_INTEGRATION_POINTS = addToSet({}, [\n    'foreignobject',\n    'desc',\n    'title',\n    'annotation-xml',\n  ]);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, TAGS.svg);\n  addToSet(ALL_SVG_TAGS, TAGS.svgFilters);\n  addToSet(ALL_SVG_TAGS, TAGS.svgDisallowed);\n\n  const ALL_MATHML_TAGS = addToSet({}, TAGS.mathMl);\n  addToSet(ALL_MATHML_TAGS, TAGS.mathMlDisallowed);\n\n  /**\n   *\n   *\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element) {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: HTML_NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // Certain elements are allowed in both SVG and HTML\n      // namespace. We need to specify them explicitly\n      // so that they don't get erronously deleted from\n      // HTML namespace.\n      const commonSvgAndHTMLElements = addToSet({}, [\n        'title',\n        'style',\n        'font',\n        'a',\n        'script',\n      ]);\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (commonSvgAndHTMLElements[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG or MathML). Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  const _forceRemove = function (node) {\n    arrayPush(DOMPurify.removed, { element: node });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      try {\n        node.outerHTML = emptyHTML;\n      } catch (_) {\n        node.remove();\n      }\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  const _removeAttribute = function (name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node,\n      });\n    }\n\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty) {\n    /* Create a HTML document */\n    let doc;\n    let leadingWhitespace;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml') {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty =\n        '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' +\n        dirty +\n        '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? '' : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(\n        doc,\n        WHOLE_DOCUMENT ? 'html' : 'body'\n      )[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n  const _createIterator = function (root) {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT,\n      null,\n      false\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  const _isClobbered = function (elm) {\n    return (\n      elm instanceof HTMLFormElement &&\n      (typeof elm.nodeName !== 'string' ||\n        typeof elm.textContent !== 'string' ||\n        typeof elm.removeChild !== 'function' ||\n        !(elm.attributes instanceof NamedNodeMap) ||\n        typeof elm.removeAttribute !== 'function' ||\n        typeof elm.setAttribute !== 'function' ||\n        typeof elm.namespaceURI !== 'string' ||\n        typeof elm.insertBefore !== 'function')\n    );\n  };\n\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  const _isNode = function (object) {\n    return typeof Node === 'object'\n      ? object instanceof Node\n      : object &&\n          typeof object === 'object' &&\n          typeof object.nodeType === 'number' &&\n          typeof object.nodeName === 'string';\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  const _executeHook = function (entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], (hook) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode) {\n    let content;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check if tagname contains Unicode */\n    if (stringMatch(currentNode.nodeName, /[\\u0080-\\uFFFF]/)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      !_isNode(currentNode.firstElementChild) &&\n      (!_isNode(currentNode.content) ||\n        !_isNode(currentNode.content.firstElementChild)) &&\n      regExpTest(/<[/\\w]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Mitigate a problem with templates inside select */\n    if (\n      tagName === 'select' &&\n      regExpTest(/<template/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(\n              cloneNode(childNodes[i], true),\n              getNextSibling(currentNode)\n            );\n          }\n        }\n      }\n\n      if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n          regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)\n        )\n          return false;\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)\n        )\n          return false;\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    if (\n      (tagName === 'noscript' || tagName === 'noembed') &&\n      regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = stringReplace(content, MUSTACHE_EXPR, ' ');\n      content = stringReplace(content, ERB_EXPR, ' ');\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (\n      ALLOW_DATA_ATTR &&\n      !FORBID_ATTR[lcName] &&\n      regExpTest(DATA_ATTR, lcName)\n    ) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        (_basicCustomElementTest(lcTag) &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag))) &&\n          ((CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName)) ||\n            (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)))) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        (lcName === 'is' &&\n          CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))))\n      ) {\n        // If user has supplied a regexp or function in CUSTOM_ELEMENT_HANDLING.tagNameCheck, we need to also allow derived custom elements using the same tagName test.\n        // Additionally, we need to allow attributes passing the CUSTOM_ELEMENT_HANDLING.attributeNameCheck user has configured, as custom elements can define these at their own discretion.\n      } else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n      // eslint-disable-next-line no-negated-condition\n    } else if (!value) {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * _basicCustomElementCheck\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   * @param {string} tagName name of the tag of the node to sanitize\n   */\n  const _basicCustomElementTest = function (tagName) {\n    return tagName.indexOf('-') > 0;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode) {\n    let attr;\n    let value;\n    let lcName;\n    let l;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      const { name, namespaceURI } = attr;\n      value = stringTrim(attr.value);\n      lcName = transformCaseFunc(name);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        value = stringReplace(value, MUSTACHE_EXPR, ' ');\n        value = stringReplace(value, ERB_EXPR, ' ');\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment) {\n    let shadowNode;\n    const shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg) {\n    let body;\n    let importedNode;\n    let currentNode;\n    let oldNode;\n    let returnNode;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      // eslint-disable-next-line no-negated-condition\n      if (typeof dirty.toString !== 'function') {\n        throw typeErrorCreate('toString is not a function');\n      } else {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      }\n    }\n\n    /* Check we can run. Otherwise fall back or ignore */\n    if (!DOMPurify.isSupported) {\n      if (\n        typeof window.toStaticHTML === 'object' ||\n        typeof window.toStaticHTML === 'function'\n      ) {\n        if (typeof dirty === 'string') {\n          return window.toStaticHTML(dirty);\n        }\n\n        if (_isNode(dirty)) {\n          return window.toStaticHTML(dirty.outerHTML);\n        }\n      }\n\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* No special handling necessary for in-place sanitization */\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : emptyHTML;\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Fix IE's strange behavior with manipulated textNodes #89 */\n      if (currentNode.nodeType === 3 && currentNode === oldNode) {\n        continue;\n      }\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n\n      oldNode = currentNode;\n    }\n\n    oldNode = null;\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, ERB_EXPR, ' ');\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  Object.defineProperty(subClass, \"prototype\", {\n    value: Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    }),\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2021, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = /[&<>\"']/g;\nconst escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nconst escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (!cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text, [])\n    };\n    lexer.state.inLink = false;\n    return token;\n  } else {\n    return {\n      type: 'image',\n      raw,\n      href,\n      title,\n      text: escape(text)\n    };\n  }\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap) {\n      if (cap[0].length > 1) {\n        return {\n          type: 'space',\n          raw: cap[0]\n        };\n      }\n      return { raw: '\\n' };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      const token = {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text: text,\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *> ?/gm, '');\n\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens: this.lexer.blockTokens(text, []),\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?: [^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0];\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            line = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(line)) {\n              break;\n            }\n\n            if (line.search(/[^ ]/) >= indent || !line.trim()) { // Dedent if possible\n              itemContents += '\\n' + line.slice(indent);\n            } else if (!blankLine) { // Until blank line, item doesn't need indentation\n              itemContents += '\\n' + line;\n            } else { // Otherwise, improper indentation ends this item\n              break;\n            }\n\n            if (!blankLine && !line.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw: raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n        if (!list.loose && list.items[i].tokens.some(t => t.type === 'space')) {\n          list.loose = true;\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        token.type = 'paragraph';\n        token.text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.tokens = [];\n        this.lexer.inline(token.text, token.tokens);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href: cap[2],\n        title: cap[3]\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = [];\n          this.lexer.inlineTokens(item.header[j].text, item.header[j].tokens);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = [];\n            this.lexer.inlineTokens(row[k].text, row[k].tokens);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      const token = {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const token = {\n        type: 'paragraph',\n        raw: cap[0],\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1],\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      const token = {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link || !link.href) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = src.slice(1, lLength + match.index + rLength);\n          return {\n            type: 'em',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text,\n            tokens: this.lexer.inlineTokens(text, [])\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = src.slice(2, lLength + match.index + rLength - 1);\n        return {\n          type: 'strong',\n          raw: src.slice(0, lLength + match.index + rLength + 1),\n          text,\n          tokens: this.lexer.inlineTokens(text, [])\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2], [])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)( [^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //        () Skip orphan delim inside strong    (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\ninline.escapedEmSt = /\\\\\\*|\\\\_/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\n/**\n * smartypants text replacement\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n')\n      .replace(/\\t/g, '    ');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/^ +$/gm, '');\n    }\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.type) {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens) {\n    this.inlineQueue.push({ src, tokens });\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang, true)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  blockquote(quote) {\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\n  }\n\n  html(html) {\n    return html;\n  }\n\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      return '<h'\n        + level\n        + ' id=\"'\n        + this.options.headerPrefix\n        + slugger.slug(raw)\n        + '\">'\n        + text\n        + '</h'\n        + level\n        + '>\\n';\n    }\n    // ignore IDs\n    return '<h' + level + '>' + text + '</h' + level + '>\\n';\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  listitem(text) {\n    return '<li>' + text + '</li>\\n';\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  paragraph(text) {\n    return '<p>' + text + '</p>\\n';\n  }\n\n  table(header, body) {\n    if (body) body = '<tbody>' + body + '</tbody>';\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  tablerow(content) {\n    return '<tr>\\n' + content + '</tr>\\n';\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? '<' + type + ' align=\"' + flags.align + '\">'\n      : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  }\n\n  // span level renderer\n  strong(text) {\n    return '<strong>' + text + '</strong>';\n  }\n\n  em(text) {\n    return '<em>' + text + '</em>';\n  }\n\n  codespan(text) {\n    return '<code>' + text + '</code>';\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  del(text) {\n    return '<del>' + text + '</del>';\n  }\n\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + escape(href) + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} options\n   * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (typeof opt === 'function') {\n    callback = opt;\n    opt = null;\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  if (callback) {\n    const highlight = opt.highlight;\n    let tokens;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    const done = function(err) {\n      let out;\n\n      if (!err) {\n        try {\n          if (opt.walkTokens) {\n            marked.walkTokens(tokens, opt.walkTokens);\n          }\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!tokens.length) return done();\n\n    let pending = 0;\n    marked.walkTokens(tokens, function(token) {\n      if (token.type === 'code') {\n        pending++;\n        setTimeout(() => {\n          highlight(token.text, token.lang, function(err, code) {\n            if (err) {\n              return done(err);\n            }\n            if (code != null && code !== token.text) {\n              token.text = code;\n              token.escaped = true;\n            }\n\n            pending--;\n            if (pending === 0) {\n              done();\n            }\n          });\n        }, 0);\n      }\n    });\n\n    if (pending === 0) {\n      done();\n    }\n\n    return;\n  }\n\n  try {\n    const tokens = Lexer.lex(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parse(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const opts = merge({}, ...args);\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n  let hasExtensions;\n\n  args.forEach((pack) => {\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      hasExtensions = true;\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        pack.walkTokens.call(this, token);\n        if (walkTokens) {\n          walkTokens.call(this, token);\n        }\n      };\n    }\n\n    if (hasExtensions) {\n      opts.extensions = extensions;\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  for (const token of tokens) {\n    callback.call(marked, token);\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          marked.walkTokens(cell.tokens, callback);\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            marked.walkTokens(cell.tokens, callback);\n          }\n        }\n        break;\n      }\n      case 'list': {\n        marked.walkTokens(token.items, callback);\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            marked.walkTokens(token[childTokens], callback);\n          });\n        } else if (token.tokens) {\n          marked.walkTokens(token.tokens, callback);\n        }\n      }\n    }\n  }\n};\n\n/**\n * Parse Inline\n */\nmarked.parseInline = function(src, opt) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked.parseInline(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked.parseInline(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  try {\n    const tokens = Lexer.lexInline(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parseInline(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n};\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n"],"names":["hasOwnProperty","Object","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","create","Reflect","apply","construct","fun","arrayForEach","unapply","Array","arrayPop","arrayPush","stringToLowerCase","String","stringMatch","stringReplace","stringIndexOf","stringTrim","regExpTest","RegExp","typeErrorCreate","unconstruct","func","args","l","array","element","lcElement","set","newObject","property","object","desc","console","html","svg","svgFilters","svgDisallowed","mathMl","mathMlDisallowed","text","xml","MUSTACHE_EXPR","ERB_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","suffix","ATTR_NAME","document","policyName","createPolicy","createHTML","_","DOMPurify","root","createDOMPurify","originalDocument","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","lookupGetter","getNextSibling","getChildNodes","getParentNode","template","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","documentMode","clone","hooks","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","addToSet","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","value","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","transformCaseFunc","CONFIG","formElement","isRegexOrFunction","testValue","_parseConfig","cfg","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","namespaceURI","tagName","parentTagName","Boolean","commonSvgAndHTMLElements","_forceRemove","node","_removeAttribute","attribute","from","name","_initDocument","doc","leadingWhitespace","dirty","matches","dirtyPayload","parseFromString","body","_createIterator","_isClobbered","elm","_isNode","_executeHook","hook","_sanitizeElements","content","currentNode","allowedTags","parentNode","childNodes","i","_basicCustomElementTest","_isValidAttribute","lcName","lcTag","_sanitizeAttributes","attr","attributes","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","_sanitizeShadowDOM","shadowNode","shadowIterator","importedNode","oldNode","returnNode","nodeIterator","serializedHTML","tag","entryPoint","hookFunction","_assertThisInitialized","self","ReferenceError","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","defineProperty","key","_createClass","protoProps","staticProps","prototype","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","isArray","F","s","n","done","e","_e","f","err","normalCompletion","didErr","call","step","next","_e2","_typeof","obj","constructor","_possibleConstructorReturn","assertThisInitialized","_createSuper","Derived","hasNativeReflectConstruct","isNativeReflectConstruct","result","Super","NewTarget","this","arguments","_defineProperty","_getPrototypeOf","__proto__","_inherits","subClass","superClass","_isNativeReflectConstruct","sham","Proxy","valueOf","ownKeys","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","push","_objectSpread2","source","forEach","getOwnPropertyDescriptors","defineProperties","_setPrototypeOf","p","getDefaults","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","defaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","encode","test","replace","unescapeTest","unescape","toLowerCase","charAt","fromCharCode","parseInt","substring","caret","edit","regex","opt","val","getRegex","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","indexOf","baseUrls","justDomain","rtrim","relativeBase","protocol","domain","resolveUrl","encodeURI","noopTest","exec","merge","splitCells","tableRow","count","cells","match","offset","str","escaped","curr","split","trim","shift","pop","splice","c","invert","suffLen","currChar","substr","checkSanitizeDeprecation","warn","repeatString","pattern","outputLink","cap","link","raw","lexer","title","state","inLink","token","type","tokens","inlineTokens","Tokenizer","options","src","rules","block","newline","code","codeBlockStyle","fences","matchIndentToCode","indentToCode","map","matchIndentInNode","slice","join","indentCodeCompensation","lang","heading","trimmed","depth","inline","hr","blockquote","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","trimLeft","search","nextBulletRegex","Math","min","task","checked","trimRight","top","some","t","pre","def","table","item","header","align","rows","j","k","row","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","b","level","findClosingBracket","linkLen","_escapes","links","reflink","nolink","maskedSrc","prevChar","emStrong","lDelim","nextChar","punctuation","rDelim","rLength","lLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","index","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","out","charCodeAt","random","toString","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Lexer","inlineQueue","lastToken","cutSrc","lastParagraphClipped","extTokenizer","space","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","error","Error","keepPrevChar","includes","lastIndexOf","codespan","startInline","inlineText","lex","Renderer","infostring","quote","slugger","slug","flags","TextRenderer","Slugger","seen","originalSlug","isDryRun","occurenceAccumulator","serialize","getNextSafeSlug","dryrun","Parser","textRenderer","l2","l3","cell","itemBody","checkbox","ret","renderers","parser","parseInline","tablecell","tablerow","parse","unshift","listitem","image","marked","callback","pending","setTimeout","message","setOptions","newDefaults","use","hasExtensions","opts","childTokens","pack","ext","prevRenderer","prop","prevTokenizer","lexInline"],"sourceRoot":""}